Object.defineProperty(exports,"__esModule",{value:true});var _helpers=require("./helpers");var _helpers2=_interopRequireDefault(_helpers);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=

{
getText:function getText(props,datum,index){
if(datum.label!==undefined){
return datum.label;
}
return Array.isArray(props.labels)?props.labels[index]:props.labels;
},

getVerticalAnchor:function getVerticalAnchor(props,datum){
var sign=datum._y>=0?1:-1;
var labelStyle=props.style&&props.style.labels||{};
if(datum.getVerticalAnchor||labelStyle.verticalAnchor){
return datum.getVerticalAnchor||labelStyle.verticalAnchor;
}else if(!props.horizontal){
return sign>=0?"end":"start";
}else{
return"middle";
}
},

getTextAnchor:function getTextAnchor(props,datum){var
style=props.style,horizontal=props.horizontal;
var sign=datum._y>=0?1:-1;
var labelStyle=style&&style.labels||{};
if(datum.getVerticalAnchor||labelStyle.verticalAnchor){
return datum.getVerticalAnchor||labelStyle.verticalAnchor;
}else if(!horizontal){
return"middle";
}else{
return sign>=0?"start":"end";
}
},

getAngle:function getAngle(props,datum){
var labelStyle=props.style&&props.style.labels||{};
return datum.angle||labelStyle.angle;
},

getPadding:function getPadding(props,datum){var
horizontal=props.horizontal,style=props.style;
var labelStyle=style.labels||{};
var defaultPadding=labelStyle.padding||0;
var sign=datum._y<0?-1:1;
return{
x:horizontal?sign*defaultPadding:0,
y:horizontal?0:sign*defaultPadding};

},

getPosition:function getPosition(props,datum){var
horizontal=props.horizontal,polar=props.polar;var _Helpers$scalePoint=
_helpers2.default.scalePoint(props,datum),x=_Helpers$scalePoint.x,y=_Helpers$scalePoint.y;
var padding=this.getPadding(props,datum);
if(!polar){
return{
x:horizontal?y+padding.x:x+padding.x,
y:horizontal?x+padding.y:y-padding.y};

}else{
var degrees=this.getDegrees(props,datum);
var polarPadding=this.getPolarPadding(props,degrees);
return{
x:x+polarPadding.x,
y:y+polarPadding.y};

}
},

getPolarPadding:function getPolarPadding(props,degrees){
var labelStyle=props.style.labels||{};
var padding=labelStyle.padding||0;
var angle=_helpers2.default.degreesToRadians(degrees);
return{
x:padding*Math.cos(angle),y:-padding*Math.sin(angle)};

},

getLabelPlacement:function getLabelPlacement(props){var
labelComponent=props.labelComponent,labelPlacement=props.labelPlacement,polar=props.polar;
var defaultLabelPlacement=polar?"perpendicular":"vertical";
return labelPlacement?
labelPlacement:
labelComponent.props&&labelComponent.props.labelPlacement||defaultLabelPlacement;
},

getPolarOrientation:function getPolarOrientation(degrees){
if(degrees<45||degrees>315){
return"right";
}else if(degrees>=45&&degrees<=135){
return"top";
}else if(degrees>135&&degrees<225){
return"left";
}else{
return"bottom";
}
},

getPolarTextAnchor:function getPolarTextAnchor(props,degrees){
var labelPlacement=this.getLabelPlacement(props);
if(labelPlacement==="perpendicular"||degrees===90||degrees===270){
return"middle";
}
return degrees<90||degrees>270?"start":"end";
},

getPolarVerticalAnchor:function getPolarVerticalAnchor(props,degrees){
var labelPlacement=this.getLabelPlacement(props);
var orientation=this.getPolarOrientation(degrees);
if(labelPlacement==="parallel"||orientation==="left"||orientation==="right"){
return"middle";
}
return orientation==="top"?"end":"start";
},

getDegrees:function getDegrees(props,datum){var _Helpers$getPoint=
_helpers2.default.getPoint(datum),x=_Helpers$getPoint.x;
return _helpers2.default.radiansToDegrees(props.scale.x(x));
},

getProps:function getProps(props,index){var
scale=props.scale,data=props.data,style=props.style,horizontal=props.horizontal,polar=props.polar;
var datum=data[index];
var degrees=this.getDegrees(props,datum);
var textAnchor=polar?
this.getPolarTextAnchor(props,degrees):this.getTextAnchor(props,datum);
var verticalAnchor=polar?
this.getPolarVerticalAnchor(props,degrees):this.getVerticalAnchor(props,datum);
var angle=this.getAngle(props,datum);
var text=this.getText(props,datum,index);
var labelPlacement=this.getLabelPlacement(props);var _getPosition=
this.getPosition(props,datum),x=_getPosition.x,y=_getPosition.y;
return{
angle:angle,data:data,datum:datum,horizontal:horizontal,index:index,polar:polar,scale:scale,labelPlacement:labelPlacement,
text:text,textAnchor:textAnchor,verticalAnchor:verticalAnchor,x:x,y:y,style:style.labels};

}};