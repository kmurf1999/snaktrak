Object.defineProperty(exports,"__esModule",{value:true});var _without2=require("lodash/without");var _without3=_interopRequireDefault(_without2);var _range2=require("lodash/range");var _range3=_interopRequireDefault(_range2);var _isFunction2=require("lodash/isFunction");var _isFunction3=_interopRequireDefault(_isFunction2);var _defaultsDeep2=require("lodash/defaultsDeep");var _defaultsDeep3=_interopRequireDefault(_defaultsDeep2);var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _includes2=require("lodash/includes");var _includes3=_interopRequireDefault(_includes2);var _uniqBy2=require("lodash/uniqBy");var _uniqBy3=_interopRequireDefault(_uniqBy2);


var _victoryCore=require("victory-core");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=

{
getCalculatedValues:function getCalculatedValues(props){
var defaultStyles=this.getStyleObject(props);
var style=this.getStyles(props,defaultStyles);
var padding=_victoryCore.Helpers.getPadding(props);
var axis=this.getAxis(props);
var axisType=this.getAxisType(props);
var stringTicks=_victoryCore.Helpers.stringTicks(props);
var domain=this.getDomain(props,axis);
var range=this.getRange(props,axis);
var scale=this.getScale(props);
var initialTicks=this.getTicks(props,scale);
var ticks=axisType==="angular"?this.filterTicks(initialTicks,scale):initialTicks;
var tickFormat=this.getTickFormat(props,scale,ticks);
var radius=this.getRadius(props);
return{
axis:axis,style:style,padding:padding,stringTicks:stringTicks,axisType:axisType,scale:scale,ticks:ticks,tickFormat:tickFormat,domain:domain,range:range,radius:radius};

},

evaluateProp:function evaluateProp(prop,data,index){
return(0,_isFunction3.default)(prop)?prop(data,index):prop;
},

evaluateStyle:function evaluateStyle(style,data,index){var _this=this;
if(!style||!Object.keys(style).some(function(value){return(0,_isFunction3.default)(style[value]);})){
return style;
}
return Object.keys(style).reduce(function(prev,curr){
prev[curr]=_this.evaluateProp(style[curr],data,index);
return prev;
},{});
},


getDomain:function getDomain(props,axis){
var inherentAxis=this.getAxis(props);
if(axis&&axis!==inherentAxis){
return undefined;
}
var domain=void 0;
if(Array.isArray(props.domain)){
domain=props.domain;
}else if(props.domain&&props.domain[inherentAxis]){
domain=props.domain[inherentAxis];
}else if(Array.isArray(props.tickValues)&&props.tickValues.length>1){
domain=_victoryCore.Domain.getDomainFromTickValues(props,axis);
}
var paddedDomain=_victoryCore.Domain.padDomain(domain,props,inherentAxis);
return domain?_victoryCore.Domain.cleanDomain(paddedDomain,props,inherentAxis):undefined;
},


getRadius:function getRadius(props){var _Helpers$getPadding=
_victoryCore.Helpers.getPadding(props),left=_Helpers$getPadding.left,right=_Helpers$getPadding.right,top=_Helpers$getPadding.top,bottom=_Helpers$getPadding.bottom;var
width=props.width,height=props.height;
return Math.min(width-left-right,height-top-bottom)/2;
},

getRange:function getRange(props,axis){

if(props.range&&props.range[axis]){
return props.range[axis];
}else if(props.range&&Array.isArray(props.range)){
return props.range;
}
var axisType=this.getAxisType(props);
if(axisType==="angular"){
var startAngle=_victoryCore.Helpers.degreesToRadians(props.startAngle);
var endAngle=_victoryCore.Helpers.degreesToRadians(props.endAngle);
return[startAngle,endAngle];
}
var radius=this.getRadius(props);
return[0,radius];
},


getAxis:function getAxis(props,flipped){
var typicalAxis=props.dependentAxis?"y":"x";
var invertedAxis=typicalAxis==="x"?"y":"x";
return flipped?invertedAxis:typicalAxis;
},

getAxisType:function getAxisType(props){
var typicalType=props.dependentAxis?"radial":"angular";
var invertedType=typicalType==="angular"?"radial":"angular";
return props.horizontal?invertedType:typicalType;
},


getScale:function getScale(props){
var axis=this.getAxis(props);
var scale=_victoryCore.Scale.getBaseScale(props,axis);
var domain=this.getDomain(props,axis)||scale.domain();
var range=this.getRange(props,axis);
scale.range(range);
scale.domain(domain);
return scale;
},

getStyleObject:function getStyleObject(props){var
theme=props.theme,dependentAxis=props.dependentAxis;
var generalAxisStyle=theme&&theme.axis&&theme.axis.style;
var axisType=dependentAxis?"dependentAxis":"independentAxis";
var specificAxisStyle=theme&&theme[axisType]&&theme[axisType].style;

return generalAxisStyle&&specificAxisStyle?
(0,_defaultsDeep3.default)({},
specificAxisStyle,
generalAxisStyle):

specificAxisStyle||generalAxisStyle;
},

getStyles:function getStyles(props,styleObject){
var style=props.style||{};
styleObject=styleObject||{};
var parentStyleProps={height:"auto",width:"100%"};
return{
parent:(0,_defaults3.default)(parentStyleProps,style.parent,styleObject.parent),
axis:(0,_defaults3.default)({},style.axis,styleObject.axis),
grid:(0,_defaults3.default)({},style.grid,styleObject.grid),
ticks:(0,_defaults3.default)({},style.ticks,styleObject.ticks),
tickLabels:(0,_defaults3.default)({},style.tickLabels,styleObject.tickLabels)};

},

getTickProps:function getTickProps(props,calculatedValues,tick,index){var
axisType=calculatedValues.axisType,radius=calculatedValues.radius,scale=calculatedValues.scale,style=calculatedValues.style;var _getEvaluatedStyles=
this.getEvaluatedStyles(style,tick,index),tickStyle=_getEvaluatedStyles.tickStyle;
var tickPadding=tickStyle.padding||0;
var angularPadding=tickPadding;
var axisAngle=props.axisAngle||props.startAngle;
return axisType==="angular"?
{
index:index,datum:tick,style:tickStyle,
x1:radius*Math.cos(scale(tick)),
y1:-radius*Math.sin(scale(tick)),
x2:(radius+tickPadding)*Math.cos(scale(tick)),
y2:-(radius+tickPadding)*Math.sin(scale(tick))}:
{
style:style,index:index,datum:tick,
x1:scale(tick)/2*Math.cos(axisAngle-angularPadding),
x2:scale(tick)/2*Math.cos(axisAngle+angularPadding),
y1:-(scale(tick)/2)*Math.sin(axisAngle-angularPadding),
y2:-(scale(tick)/2)*Math.sin(axisAngle+angularPadding)};

},

getTickLabelProps:function getTickLabelProps(props,calculatedValues,tick,index){var
axisType=calculatedValues.axisType,radius=calculatedValues.radius,tickFormat=calculatedValues.tickFormat,style=calculatedValues.style,scale=calculatedValues.scale;var _getEvaluatedStyles2=
this.getEvaluatedStyles(style,tick,index),labelStyle=_getEvaluatedStyles2.labelStyle;
var tickPadding=labelStyle.padding||0;
var angularPadding=0;
var axisAngle=props.axisAngle||props.startAngle;
var labelAngle=axisType==="angular"?
scale(tick):_victoryCore.Helpers.degreesToRadians(axisAngle+angularPadding);
var textAngle=labelStyle.angle||this.getTextAngle(props,labelAngle);
var labelRadius=axisType==="angular"?radius+tickPadding:scale(tick);
return{
index:index,datum:tick,style:labelStyle,
angle:textAngle,
textAnchor:labelStyle.textAnchor||this.getTextAnchor(labelAngle,props.labelPlacement),
text:tickFormat(tick,index),
x:labelRadius*Math.cos(labelAngle),
y:-labelRadius*Math.sin(labelAngle)};

},

getTextAngle:function getTextAngle(props,baseAngle){
if(props.labelPlacement==="vertical"){
return 0;
}
var degrees=_victoryCore.Helpers.radiansToDegrees(baseAngle);
var sign=degrees>90&&degrees<180||degrees>270?1:-1;
var angle=void 0;
if(degrees===0||degrees===180){
angle=90;
}else if(degrees>0&&degrees<180){
angle=90-degrees;
}else if(degrees>180&&degrees<360){
angle=270-degrees;
}
var labelRotation=props.labelPlacement==="perpendicular"?0:90;
return angle+sign*labelRotation;
},

getTextAnchor:function getTextAnchor(baseAngle,labelPlacement){
if(labelPlacement==="perpendicular"){
return"middle";
}
var angle=_victoryCore.Helpers.radiansToDegrees(baseAngle);
return angle<=90||angle>270?"start":"end";
},

getGridProps:function getGridProps(props,calculatedValues,tick,index){var
axisType=calculatedValues.axisType,radius=calculatedValues.radius,style=calculatedValues.style,scale=calculatedValues.scale;var
startAngle=props.startAngle,endAngle=props.endAngle;var _getEvaluatedStyles3=
this.getEvaluatedStyles(style,tick,index),gridStyle=_getEvaluatedStyles3.gridStyle;
return axisType==="angular"?
{
index:index,datum:tick,style:gridStyle,
x1:radius*Math.cos(scale(tick)),
y1:-radius*Math.sin(scale(tick)),
x2:0,y2:0}:
{
style:gridStyle,index:index,datum:tick,
cx:0,cy:0,r:scale(tick),startAngle:startAngle,endAngle:endAngle};

},

getAxisProps:function getAxisProps(modifiedProps,calculatedValues){var
style=calculatedValues.style,axisType=calculatedValues.axisType,radius=calculatedValues.radius;var
startAngle=modifiedProps.startAngle,endAngle=modifiedProps.endAngle;
var axisAngle=modifiedProps.axisAngle||startAngle;
return axisType==="radial"?
{
style:style.axis,
x1:0,
x2:radius*Math.cos(_victoryCore.Helpers.degreesToRadians(axisAngle)),
y1:0,
y2:-radius*Math.sin(_victoryCore.Helpers.degreesToRadians(axisAngle))}:
{
style:style.axis,
cx:0,cy:0,r:radius,startAngle:startAngle,endAngle:endAngle};

},

getEvaluatedStyles:function getEvaluatedStyles(style,tick,index){
return{
tickStyle:this.evaluateStyle(style.ticks,tick,index),
labelStyle:this.evaluateStyle(style.tickLabels,tick,index),
gridStyle:this.evaluateStyle(style.grid,tick,index)};

},

getRole:function getRole(props){
if(props.dependentAxis){
return props.theme&&props.theme.dependentAxis?
"dependentAxis":
"axis";
}

return props.theme&&props.theme.independentAxis?
"independentAxis":
"axis";
},

getShallowMergedThemeProps:function getShallowMergedThemeProps(props,role){
var axisTheme=props.theme.axis||{};
return(0,_defaults3.default)({},props.theme[role],axisTheme);
},

modifyProps:function modifyProps(props,fallbackProps,role){
if(role!=="axis"){
props.theme[role]=this.getShallowMergedThemeProps(props,role);
}
return _victoryCore.Helpers.modifyProps(props,fallbackProps,role);
},

getBaseProps:function getBaseProps(props,fallbackProps){var _this2=this;
var role=this.getRole(props);
props=this.modifyProps(props,fallbackProps,role);
var calculatedValues=this.getCalculatedValues(props);var
style=calculatedValues.style,scale=calculatedValues.scale,ticks=calculatedValues.ticks,domain=calculatedValues.domain;var _props=
props,width=_props.width,height=_props.height,standalone=_props.standalone,theme=_props.theme;

var axisProps=this.getAxisProps(props,calculatedValues);
var initialChildProps={parent:
{style:style.parent,ticks:ticks,scale:scale,width:width,height:height,domain:domain,standalone:standalone,theme:theme}};


return ticks.reduce(function(childProps,tick,index){
childProps[index]={
axis:axisProps,
ticks:_this2.getTickProps(props,calculatedValues,tick,index),
tickLabels:_this2.getTickLabelProps(props,calculatedValues,tick,index),
grid:_this2.getGridProps(props,calculatedValues,tick,index)};


return childProps;
},initialChildProps);
},

getTicks:function getTicks(props,scale){var
tickValues=props.tickValues,tickCount=props.tickCount;
if(tickValues&&Array.isArray(tickValues)){
if(_victoryCore.Helpers.stringTicks(props)){
return(0,_range3.default)(1,props.tickValues.length+1);
}
return tickValues.length?tickValues:scale.domain();
}else if(scale.ticks&&(0,_isFunction3.default)(scale.ticks)){
var scaleTicks=scale.ticks(tickCount);
var ticks=Array.isArray(scaleTicks)&&scaleTicks.length?scaleTicks:scale.domain();
var filteredTicks=(0,_includes3.default)(ticks,0)?(0,_without3.default)(ticks,0):ticks;
return filteredTicks.length?filteredTicks:ticks;
}
return scale.domain();
},

filterTicks:function filterTicks(ticks,scale){
var compareTicks=function compareTicks(t){return scale(t)%(2*Math.PI);};
return(0,_uniqBy3.default)(ticks,compareTicks);
},

getTickFormat:function getTickFormat(props,scale){
if(props.tickFormat&&(0,_isFunction3.default)(props.tickFormat)){
return props.tickFormat;
}else if(props.tickFormat&&Array.isArray(props.tickFormat)){
return function(x,index){return props.tickFormat[index];};
}else if(_victoryCore.Helpers.stringTicks(props)){
return function(x,index){return props.tickValues[index];};
}else if(scale.tickFormat&&(0,_isFunction3.default)(scale.tickFormat)){
return scale.tickFormat();
}else{
return function(x){return x;};
}
}};